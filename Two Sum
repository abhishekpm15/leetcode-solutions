You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.

Input: nums = [3,2,4], target = 6
Output: [1,2]

Input: nums = [3,3], target = 6
Output: [0,1]

CODE :

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        map<int,int> mp;
        vector<int> vec;
        for(int i=0;i<nums.size();i++){
            int num = target - nums[i];
            if(mp.find(num)!=mp.end()){
                vec.push_back(mp[num]);
                vec.push_back(i);
                break;
            }
            else{
                mp.insert({nums[i],i});
            }
        }
        return vec;
    }
};
